name: (M) Behat Tests
on:
  workflow_call:
    secrets:
      GH_TOKEN_REPO:
        description: "PAT"
      LANDO_ENV:
        description: ".env variables"
      CREATEUSERS:
        description: "Dev users script"
      SERVICENOW_KEY:
        description: "Servicenow key"
      ENCRYPT_KEY:
        description: "One key to rule them all"
      TEAMS_KEY:
        description: "Key to send teams messages"
      BEHAT_LOCAL:
        description: "Behat local.yml"
      LIASON:
        description: "Liason Key"
      SUBSCRIPTIONS_KEY:
        description: "Subscriptions key"
      BEHAT_TAG:
        description: "Behat tag to run"
permissions:
  actions: read
  contents: write
jobs:
  behat:
    name: Behat tests
    runs-on: ubuntu-latest
    environment: oit-ci
    steps:
      - uses: actions/checkout@v1
      - name: Set lando version.
        run: echo "LANDO_VERSION=$(cat .github/lando_version.md)" >> $GITHUB_ENV
      - name: Cache Lando
        id: cache-lando
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/lando
          key: ${{ runner.os }}-${{ env.LANDO_VERSION }}-lando
      - name: Install Lando
        if: steps.cache-lando.outputs.cache-hit != 'true'
        run: |
          sudo curl -fsSL -o /usr/local/bin/lando "https://files.lando.dev/cli/lando-linux-x64-$LANDO_VERSION"
          sudo chmod +x /usr/local/bin/lando

      - name: Cache Composer dependencies
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - uses: php-actions/composer@v6
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.GH_TOKEN_REPO }}"} }'
          args: --ignore-platform-reqs --prefer-source
          interaction: no
          dev: yes
          quiet: no

      - name: Spin up site
        run: |
          composer config -g github-oauth.github.com $gh_token
          #composer install --ignore-platform-reqs -n
          echo "$lando_env" > .env
          echo "GITHUB_TOKEN=$GITHUB_ACTOR:$GITHUB_TOKEN" >> .env
          vendor/bin/blt oit:landosetup $gh_token
          ls docroot/sites/default/settings/
          mkdir .keys
          echo "$test_users" > .keys/createTestUsers.sh
          echo "$encrypt_key" > .keys/encrypt.key
          echo "$servicenow" > .keys/oit.servicenow.key
          echo "$teams_key" > .keys/dingo_teams.key
          echo "$liason" > .keys/oit.liaison.key
          echo "$subscripiton" > .keys/oit.subscriptions.key
          cp blt/local-behat.yml tests/behat/local.yml
        env:
          gh_token: ${{ secrets.GH_TOKEN_REPO }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          lando_env: ${{ secrets.LANDO_ENV }}
          test_users: ${{ secrets.CREATEUSERS }}
          servicenow: ${{ secrets.SERVICENOW_KEY }}
          encrypt_key: ${{ secrets.ENCRYPT_KEY }}
          teams_key: ${{ secrets.TEAMS_KEY }}
          liason: ${{ secrets.LIASON }}
          subscripiton: ${{ secrets.SUBSCRIPTIONS_KEY }}
      - name: Custom Database
        if: "${{ github.event.inputs.database != '' }}"
        run: |
          rm backups/site.sql.gz
          wget -O backups/site.sql.gz '$database'
          lando db-import backups/site.sql.gz
          lando drush sql-sanitize --sanitize-password -y
          chmod u+x .keys/createTestUsers.sh
          lando ssh -c /app/.keys/createTestUsers.sh
          lando drush en oit_dev
          lando drush en dblog devel devel_kint_extras
        env:
          database: ${{ github.event.inputs.database }}
      - name: Run behat tests
        run: |
          vendor/bin/blt oit:behat $behat_tag
        env:
          behat_tag: ${{ github.event.inputs.BEHAT_TAG }}
      - name: Screenshots artifact
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: tests/behat/screenshots
          retention-days: 1
